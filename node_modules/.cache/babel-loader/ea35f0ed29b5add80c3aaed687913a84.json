{"ast":null,"code":"var _jsxFileName = \"/Users/sahilsutaria/Desktop/React/TrackerCovid/src/Doughnut.js\";\nimport React from 'react';\nimport './App.css';\nimport Chart from 'chart.js';\nimport { Card } from \"react-bootstrap\";\n\nclass Doughnut extends React.Component {\n  constructor(props) {\n    super(props);\n    this.countries = [];\n    this.v = new Map();\n    this.width = \"380px\";\n    this.height = \"380px\";\n\n    if (window.innerWidth < 1000) {\n      this.width = \"300px\";\n      this.height = \"300px\";\n    }\n  }\n\n  componentDidMount() {\n    this.fetchCountryList();\n  }\n\n  fetchCountryList() {\n    console.log(\"Inside fetch\");\n    fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/affected.php\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(resp => {\n      for (let i = 0; i < 5; i++) {\n        this.countries.push(resp.affected_countries[i]);\n      }\n    }).then(() => {\n      this.fetchAsync();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  fetchAsync() {\n    for (let i = 0; i < this.countries.length; i++) {\n      fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/latest_stat_by_country.php?country=${this.countries[i]}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(resp => {\n        let c = resp.latest_stat_by_country[0].total_cases.replace(/,/g, '');\n        this.v.set(resp.country, Number(c));\n      }).then(() => {\n        let a = Array.from(this.v.keys());\n        let b = Array.from(this.v.values());\n        console.log(a);\n        console.log(b);\n        Chart.defaults.global.animation.duration = 10000;\n        Chart.defaults.global.defaultFontSize = 7;\n\n        if (document.getElementById(\"dd\") != null) {\n          const myc4 = document.getElementById(\"dd\").getContext('2d');\n          const dough = new Chart(myc4, {\n            type: 'doughnut',\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              events: ['mousemove'],\n              legend: {\n                display: true\n              }\n            },\n            data: {\n              labels: a.reverse(),\n              datasets: [{\n                borderColor: \"white\",\n                backgroundColor: ['rgba(79,64,36,0.94)', 'rgb(128,104,58)', 'rgba(190,154,87,0.91)', 'rgba(244,197,111,0.9)', 'rgba(180,180,11,0.93)'],\n                data: b.reverse()\n              }]\n            }\n          });\n          console.log(dough);\n        }\n      }).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"effect7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \" Top 5 countries\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      style: {\n        width: this.width,\n        height: this.height\n      },\n      id: \"dd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"\\u03A9\")), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Doughnut;","map":{"version":3,"sources":["/Users/sahilsutaria/Desktop/React/TrackerCovid/src/Doughnut.js"],"names":["React","Chart","Card","Doughnut","Component","constructor","props","countries","v","Map","width","height","window","innerWidth","componentDidMount","fetchCountryList","console","log","fetch","then","response","json","resp","i","push","affected_countries","fetchAsync","catch","err","length","c","latest_stat_by_country","total_cases","replace","set","country","Number","a","Array","from","keys","b","values","defaults","global","animation","duration","defaultFontSize","document","getElementById","myc4","getContext","dough","type","options","responsive","maintainAspectRatio","events","legend","display","data","labels","reverse","datasets","borderColor","backgroundColor","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Chart from 'chart.js'\nimport {Card} from \"react-bootstrap\";\n\n\nclass Doughnut extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.countries=[];\n        this.v = new Map()\n        this.width=\"380px\"\n        this.height=\"380px\"\n        if(window.innerWidth<1000){\n            this.width=\"300px\"\n            this.height=\"300px\"\n        }\n\n\n\n    }\n\n    componentDidMount() {\n        this.fetchCountryList()\n    }\n\n    fetchCountryList(){\n        console.log(\"Inside fetch\")\n        fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/affected.php\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n            }\n        })\n            .then(response => {return (response.json());})\n            .then(resp=>{\n\n                for (let i=0; i<5; i++) {\n                    this.countries.push(resp.affected_countries[i])\n                }\n            })\n            .then(()=>{this.fetchAsync()})\n            .catch(err => {console.log(err);});\n    }\n\n\n\n\n    fetchAsync(){\n\n        for (let i=0; i< this.countries.length; i++){\n            fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/latest_stat_by_country.php?country=${this.countries[i]}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n                }\n            }).then(response=> {return response.json()})\n                .then(resp=>{\n\n\n                    let c = resp.latest_stat_by_country[0].total_cases.replace(/,/g,'')\n                    this.v.set(resp.country,Number(c) )\n                }).then(()=>{let a= Array.from(this.v.keys())\n                let b=Array.from(this.v.values())\n                console.log(a)\n                console.log(b)\n                Chart.defaults.global.animation.duration=10000;\n                Chart.defaults.global.defaultFontSize = 7;\n                if (document.getElementById(\"dd\")!=null){\n\n                    const myc4 = document.getElementById(\"dd\").getContext('2d');\n                    const dough =new Chart(myc4,{\n                        type: 'doughnut',\n                        options:{responsive: true, maintainAspectRatio: false, events: ['mousemove'],\n                            legend:{\n                                display:true,\n                            }},\n                        data: {\n                            labels: a.reverse(),\n                            datasets: [{\n                                borderColor: \"white\",\n                                backgroundColor: [\n                                    'rgba(79,64,36,0.94)',\n                                    'rgb(128,104,58)',\n                                    'rgba(190,154,87,0.91)',\n                                    'rgba(244,197,111,0.9)',\n                                    'rgba(180,180,11,0.93)',\n                                ],\n\n                                data:b.reverse()}]\n                        },\n                    });\n\n                    console.log(dough)\n                }\n\n            }).catch(error=>console.log(error))\n\n\n\n        }\n\n\n\n    }\n\n\n\n    render() {\n        return (\n            <div>\n\n                <Card className=\"effect7\">\n                    <Card.Header className=\"head\"> Top 5 countries</Card.Header>\n                    <Card.Body>\n                        <canvas style={{width:this.width,height:this.height}} id=\"dd\" >Ω</canvas>\n                    </Card.Body>\n                    <Card.Footer></Card.Footer>\n                </Card>\n            </div>\n        );\n    }\n\n\n\n\n}\n\nexport default Doughnut;\n"]},"metadata":{},"sourceType":"module"}