{"ast":null,"code":"var _jsxFileName = \"/Users/sahilsutaria/Desktop/React/TrackerCovid/src/Charts/Charts.js\";\nimport React from \"react\";\nimport Chart from 'chart.js';\nimport { Card } from 'react-bootstrap';\nimport '../Components/Styles/style.css';\n\nfunction Graphs(props) {\n  let Date_total = new Map();\n  let Date_deaths = new Map();\n  let Date_newdeaths = new Map();\n  let date_key = [];\n  let date_val = [];\n  let death_date = [];\n  let death_val = [];\n  let new_death_date = [];\n  let new_death_val = [];\n  let col = ['#003f5c', '#58508d', '#bc5090', '#c45850', '#344e4f', '#ff6361', '#ffa600'];\n  fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=${props.country}`, {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n    }\n  }).then(response => {\n    return response.json();\n  }).then(resp => {\n    let metadata = resp.stat_by_country;\n\n    for (let i = 0; i < metadata.length; i++) {\n      let d = metadata[i].record_date;\n      let total_cases = metadata[i].total_cases;\n      let total_death = metadata[i].total_deaths;\n      let new_deaths = metadata[i].new_deaths;\n      let date = d.split(\" \");\n\n      if (total_cases !== \"\") {\n        let tot = total_cases.replace(/,/g, '');\n        Date_total.set(date[0], Number(tot));\n      }\n\n      if (total_death !== \"\") {\n        let dth = total_death.replace(/,/g, '');\n        Date_deaths.set(date[0], Number(dth));\n      }\n\n      if (new_deaths !== \"\") {\n        let nd = new_deaths.replace(/,/g, '');\n\n        if (Number(nd) > 30) {\n          Date_newdeaths.set(date[0], Number(nd));\n        }\n      }\n    }\n\n    date_key = Array.from(Date_total.keys()).slice(0, 30);\n    date_val = Array.from(Date_total.values()).slice(0, 30);\n    death_date = Array.from(Date_deaths.keys()).slice(0, 30);\n    death_val = Array.from(Date_deaths.values()).slice(0, 30);\n    new_death_date = Array.from(Date_newdeaths.keys()).slice(0, 30);\n    new_death_val = Array.from(Date_newdeaths.values()).slice(0, 30);\n    Chart.defaults.global.defaultFontSize = 11;\n    Chart.defaults.global.animation.duration = 3000;\n    Chart.defaults.global.legend = false;\n    const myc = document.getElementById(\"chart1\").getContext('2d');\n    const myChart = new Chart(myc, {\n      type: 'line',\n      options: {\n        responsive: true,\n        maintainAspectRatio: true,\n        events: ['mousemove']\n      },\n      data: {\n        labels: date_key.reverse(),\n        datasets: [{\n          label: `Case vs Dates - ${props.country.toUpperCase()}`,\n          borderColor: col[Math.floor(Math.random() * col.length)],\n          data: date_val.reverse()\n        }]\n      }\n    });\n    myChart.clear();\n    const my2 = document.getElementById(\"chart2\").getContext('2d');\n    const myChart2 = new Chart(my2, {\n      type: 'bar',\n      options: {\n        responsive: true,\n        maintainAspectRatio: true,\n        events: ['mousemove']\n      },\n      data: {\n        labels: death_date.reverse(),\n        datasets: [{\n          label: `Deaths vs Dates in - ${props.country.toUpperCase()}`,\n          data: death_val.reverse(),\n          borderColor: \"black\",\n          backgroundColor: \"#ffa600\",\n          borderWidth: \"3\"\n        }]\n      }\n    });\n    myChart2.clear();\n    const my3 = document.getElementById(\"chart3\").getContext('2d');\n    const myChart3 = new Chart(my3, {\n      type: 'line',\n      options: {\n        responsive: true,\n        maintainAspectRatio: true,\n        events: ['mousemove']\n      },\n      data: {\n        labels: new_death_date.reverse(),\n        datasets: [{\n          label: `Daily Deaths vs Dates in - ${props.country.toUpperCase()}`,\n          borderColor: \"gray\",\n          backgroundColor: '#c25f5f4f',\n          data: new_death_val.reverse()\n        }]\n      }\n    });\n    myChart3.clear();\n  }).catch(err => {\n    console.log(err);\n  });\n  let sty = {\n    width: \"48vw\",\n    height: \"58vh\"\n  };\n  /*Cards code can be resued*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"effect7 bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"effect7 bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 62\n    }\n  }, \"Cases vs Dates - \", props.country.toUpperCase())), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: sty,\n    id: \"chart1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, \" \"))), /*#__PURE__*/React.createElement(Card.Footer, {\n    className: \"effect7 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"effect7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"effect7 head bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Total Deaths vs Dates - \", props.country.toUpperCase()), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: sty,\n    id: \"chart2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Footer, {\n    className: \"effect7 bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"effect7 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"effect7 bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"effect7 head bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Daily Deaths vs Dates - \", props.country.toUpperCase()), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: sty,\n    id: \"chart3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Footer, {\n    className: \"effect7 bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Graphs;","map":{"version":3,"sources":["/Users/sahilsutaria/Desktop/React/TrackerCovid/src/Charts/Charts.js"],"names":["React","Chart","Card","Graphs","props","Date_total","Map","Date_deaths","Date_newdeaths","date_key","date_val","death_date","death_val","new_death_date","new_death_val","col","fetch","country","then","response","json","resp","metadata","stat_by_country","i","length","d","record_date","total_cases","total_death","total_deaths","new_deaths","date","split","tot","replace","set","Number","dth","nd","Array","from","keys","slice","values","defaults","global","defaultFontSize","animation","duration","legend","myc","document","getElementById","getContext","myChart","type","options","responsive","maintainAspectRatio","events","data","labels","reverse","datasets","label","toUpperCase","borderColor","Math","floor","random","clear","my2","myChart2","backgroundColor","borderWidth","my3","myChart3","catch","err","console","log","sty","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Chart from 'chart.js';\nimport {Card} from 'react-bootstrap';\nimport '../Components/Styles/style.css'\n\nfunction Graphs(props){\n\n    let Date_total= new Map()\n    let Date_deaths= new Map()\n    let Date_newdeaths= new Map()\n    let date_key=[]\n    let date_val=[]\n    let death_date=[]\n    let death_val=[]\n    let new_death_date=[]\n    let new_death_val=[]\n    let col = ['#003f5c', '#58508d', '#bc5090','#c45850','#344e4f','#ff6361','#ffa600']\n\n    fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=${props.country}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n        }\n    })\n    .then(response => {return response.json();})\n    .then(resp=>{\n        let metadata = resp.stat_by_country\n        for (let i=0; i<(metadata.length); i++){\n            let d=metadata[i].record_date\n            let total_cases = metadata[i].total_cases\n            let total_death = metadata[i].total_deaths\n            let new_deaths = metadata[i].new_deaths\n            let date = d.split(\" \")\n            if (total_cases !== \"\"){\n               let tot=total_cases.replace(/,/g,'')\n                Date_total.set(date[0],Number(tot))\n            }\n            if (total_death !== \"\"){\n                let dth = total_death.replace(/,/g,'')\n                Date_deaths.set(date[0],Number(dth))\n            }\n            if (new_deaths !== \"\"){\n                let nd = new_deaths.replace(/,/g,'')\n                if (Number(nd) > 30){\n                    Date_newdeaths.set(date[0],Number(nd))\n                }\n            }\n        }\n        date_key = Array.from( Date_total.keys()).slice(0, 30);\n        date_val = Array.from (Date_total.values()).slice(0, 30);\n        death_date = Array.from(Date_deaths.keys()).slice(0, 30);\n        death_val = Array.from(Date_deaths.values()).slice(0, 30);\n        new_death_date = Array.from(Date_newdeaths.keys()).slice(0, 30);\n        new_death_val = Array.from(Date_newdeaths.values()).slice(0, 30);\n    \n        Chart.defaults.global.defaultFontSize = 11;\n        Chart.defaults.global.animation.duration = 3000;\n        Chart.defaults.global.legend = false;\n    \n\n        const myc = document.getElementById(\"chart1\").getContext('2d');\n        const myChart = new Chart(myc, {\n            type: 'line',\n            options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n            data: {\n                labels: date_key.reverse(),\n                datasets: [{label: `Case vs Dates - ${props.country.toUpperCase()}`,\n                            borderColor: col[Math.floor(Math.random() * col.length)],\n                            data:date_val.reverse(),\n                }]\n            },\n        });\n        myChart.clear()\n\n        const my2 = document.getElementById(\"chart2\").getContext('2d');\n        const myChart2 = new Chart(my2, {\n            type: 'bar',\n            options:{responsive: true, maintainAspectRatio: true, events: ['mousemove']},\n            data: {\n                labels: death_date.reverse(),\n                datasets: [\n                    {\n                        label: `Deaths vs Dates in - ${props.country.toUpperCase()}`,\n                        data:death_val.reverse(),\n                        borderColor: \"black\",\n                        backgroundColor:\"#ffa600\",\n                        borderWidth : \"3\",\n                    }]\n            },\n        });\n        myChart2.clear()\n\n        const my3 = document.getElementById(\"chart3\").getContext('2d');\n        const myChart3 = new Chart(my3, {\n            type: 'line',\n            options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n            data: {\n                labels: new_death_date.reverse(),\n                datasets: [{label: `Daily Deaths vs Dates in - ${props.country.toUpperCase()}`,\n                            borderColor: \"gray\",\n                            backgroundColor: '#c25f5f4f',\n                            data:new_death_val.reverse(),\n                }]\n            },\n        });\n        myChart3.clear()\n    })\n    .catch(err => {console.log(err);});\n\n    let sty={\n        width:\"48vw\",\n        height:\"58vh\"\n    }\n    /*Cards code can be resued*/ \n    return(\n        <div>\n            <br/>\n            <Card className=\"effect7 bg-dark\">\n                <Card.Body className=\"bg-light\" >\n                    <Card.Header className=\"effect7 bg-dark\"><span className=\"head\">Cases vs Dates - {props.country.toUpperCase()}</span></Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart1\"> </canvas>\n                    </div>\n                </Card.Body>\n                    <Card.Footer className=\"effect7 \"></Card.Footer>\n            </Card>\n            <br/>\n            <br/>\n            <Card className=\"effect7\">\n                <Card.Body>\n                    <Card.Header className=\"effect7 head bg-dark\">Total Deaths vs Dates - {props.country.toUpperCase()}</Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart2\"></canvas>\n                    </div>\n                </Card.Body>\n                <Card.Footer className=\"effect7 bg-dark\"></Card.Footer>\n            </Card>\n            <br/>\n            <br/>\n            <Card className=\"effect7 \">\n                <Card.Body className=\"effect7 bg-light\">\n                    <Card.Header className=\"effect7 head bg-dark\">Daily Deaths vs Dates - {props.country.toUpperCase()}</Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart3\"></canvas>\n                    </div>\n                </Card.Body>\n                <Card.Footer className=\"effect7 bg-dark\"></Card.Footer>\n            </Card>            \n        </div>\n    )\n}\n\nexport default Graphs;"]},"metadata":{},"sourceType":"module"}