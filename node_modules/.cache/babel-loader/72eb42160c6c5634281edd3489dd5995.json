{"ast":null,"code":"var _jsxFileName = \"/Users/sahilsutaria/Desktop/React/TrackerCovid/src/Charts.js\";\nimport React from \"react\";\nimport Chart from 'chart.js';\nimport { Card } from 'react-bootstrap';\nexport default function graphs(props) {\n  let Date_total = new Map();\n  let Date_deaths = new Map();\n  let Date_newdeaths = new Map();\n  let date_key = [];\n  let date_val = [];\n  let death_date = [];\n  let death_val = [];\n  let new_death_date = [];\n  let new_death_val = [];\n  let col = ['orange', 'red', 'black', 'gray', 'yellow', 'blue', 'green', '#c45850', '#344e4f'];\n  fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=${props.country}`, {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n    }\n  }).then(response => {\n    return response.json();\n  }).then(resp => {\n    let metadata = resp.stat_by_country;\n\n    for (let i = 0; i < metadata.length; i++) {\n      let d = metadata[i].record_date;\n      let total_cases = metadata[i].total_cases;\n      let total_death = metadata[i].total_deaths;\n      let new_deaths = metadata[i].new_deaths;\n      let date = d.split(\" \");\n\n      if (total_cases !== \"\") {\n        let tot = total_cases.replace(/,/g, '');\n        Date_total.set(date[0], Number(tot));\n      }\n\n      if (total_death !== \"\") {\n        let dth = total_death.replace(/,/g, '');\n        Date_deaths.set(date[0], Number(dth));\n      }\n\n      if (new_deaths !== \"\") {\n        let nd = new_deaths.replace(/,/g, '');\n\n        if (Number(nd) > 30) {\n          Date_newdeaths.set(date[0], Number(nd));\n        }\n      }\n    }\n\n    date_key = Array.from(Date_total.keys()).slice(0, 30);\n    date_val = Array.from(Date_total.values()).slice(0, 30);\n    death_date = Array.from(Date_deaths.keys()).slice(0, 30);\n    death_val = Array.from(Date_deaths.values()).slice(0, 30);\n    new_death_date = Array.from(Date_newdeaths.keys()).slice(0, 30);\n    new_death_val = Array.from(Date_newdeaths.values()).slice(0, 30);\n    /* Native*/\n\n    if (window.innerWidth < 1100) {\n      let native_date = [];\n      let native_val = [];\n      let native_date_death = [];\n      let native_val_death = [];\n      let native_daily_date = [];\n      let native_daily_case = [];\n\n      for (let i = 0; i < date_key.length - 2; i = i + 2) {\n        if (date_key[i] !== undefined) {\n          native_date.push(date_key[i]);\n          native_val.push(date_val[i]);\n        }\n\n        if (death_date[i] !== undefined) {\n          native_date_death.push(death_date[i]);\n          native_val_death.push(death_val[i]);\n        }\n\n        if (new_death_date[i] !== undefined) {\n          native_daily_date.push(new_death_date[i]);\n          native_daily_case.push(new_death_val[i]);\n        }\n      }\n\n      Chart.defaults.global.animation.duration = 4000;\n      Chart.defaults.global.legend = false;\n      const myc = document.getElementById(\"chart1\").getContext('2d');\n      const myChart = new Chart(myc, {\n        type: 'line',\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          events: ['mousemove'],\n          label: {\n            legend: true\n          }\n        },\n        data: {\n          labels: native_date.reverse(),\n          datasets: [{\n            borderColor: col[Math.floor(Math.random() * col.length)],\n            data: native_val.reverse()\n          }]\n        }\n      });\n      myChart.clear();\n      const myc2 = document.getElementById(\"chart2\").getContext('2d');\n      const myChart2 = new Chart(myc2, {\n        type: 'bar',\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          events: ['mousemove']\n        },\n        data: {\n          labels: native_date_death.reverse(),\n          datasets: [{\n            backgroundColor: col[Math.floor(Math.random() * col.length)],\n            data: native_val_death.reverse()\n          }]\n        }\n      });\n      myChart2.clear();\n      const myc3 = document.getElementById(\"chart3\").getContext('2d');\n      const myChart3 = new Chart(myc3, {\n        type: 'line',\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          events: ['mousemove']\n        },\n        data: {\n          labels: native_daily_date.reverse(),\n          datasets: [{\n            borderColor: \"gray\",\n            backgroundColor: col[Math.floor(Math.random() * col.length)],\n            data: native_daily_case.reverse()\n          }]\n        }\n      });\n      myChart3.clear();\n    }\n    /*  full screen*/\n    else {\n        Chart.defaults.global.defaultFontSize = 11;\n        Chart.defaults.global.animation.duration = 4000;\n        Chart.defaults.global.legend = false;\n        const myc = document.getElementById(\"chart1\").getContext('2d');\n        const myChart = new Chart(myc, {\n          type: 'line',\n          options: {\n            responsive: true,\n            maintainAspectRatio: true,\n            events: ['mousemove']\n          },\n          data: {\n            labels: date_key.reverse(),\n            datasets: [{\n              label: `Case vs Dates - ${props.country.toUpperCase()}`,\n              borderColor: col[Math.floor(Math.random() * col.length)],\n              data: date_val.reverse()\n            }]\n          }\n        });\n        myChart.clear();\n        const my2 = document.getElementById(\"chart2\").getContext('2d');\n        const myChart2 = new Chart(my2, {\n          type: 'bar',\n          options: {\n            responsive: true,\n            maintainAspectRatio: true,\n            events: ['mousemove']\n          },\n          data: {\n            labels: death_date.reverse(),\n            datasets: [{\n              label: `Deaths vs Dates in - ${props.country.toUpperCase()}`,\n              data: death_val.reverse(),\n              backgroundColor: col[Math.floor(Math.random() * col.length)]\n            }]\n          }\n        });\n        myChart2.clear();\n        const my3 = document.getElementById(\"chart3\").getContext('2d');\n        const myChart3 = new Chart(my3, {\n          type: 'line',\n          options: {\n            responsive: true,\n            maintainAspectRatio: true,\n            events: ['mousemove']\n          },\n          data: {\n            labels: new_death_date.reverse(),\n            datasets: [{\n              label: `Daily Deaths vs Dates in - ${props.country.toUpperCase()}`,\n              borderColor: \"gray\",\n              backgroundColor: col[Math.floor(Math.random() * col.length)],\n              data: new_death_val.reverse()\n            }]\n          }\n        });\n        myChart3.clear();\n      }\n  }).catch(err => {\n    console.log(err);\n  });\n  let sty = {\n    width: \"52vw\",\n    height: \"63vh\"\n  };\n\n  if (window.innerWidth < 1100) {\n    sty.width = \"82vw\";\n    sty.height = \"87vw\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"effect7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"effect7 head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, \"Cases vs Dates in \", props.country.toUpperCase()), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: sty,\n    id: \"chart1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \" \"))), /*#__PURE__*/React.createElement(Card.Footer, {\n    className: \"effect7 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"effect7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"effect7 head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"Daily Deaths vs Dates \", props.country.toUpperCase()), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: sty,\n    id: \"chart3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Footer, {\n    className: \"effect7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"effect7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"effect7 head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, \"Total Deaths vs Dates \", props.country.toUpperCase()), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: sty,\n    id: \"chart2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Footer, {\n    className: \"effect7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/sahilsutaria/Desktop/React/TrackerCovid/src/Charts.js"],"names":["React","Chart","Card","graphs","props","Date_total","Map","Date_deaths","Date_newdeaths","date_key","date_val","death_date","death_val","new_death_date","new_death_val","col","fetch","country","then","response","json","resp","metadata","stat_by_country","i","length","d","record_date","total_cases","total_death","total_deaths","new_deaths","date","split","tot","replace","set","Number","dth","nd","Array","from","keys","slice","values","window","innerWidth","native_date","native_val","native_date_death","native_val_death","native_daily_date","native_daily_case","undefined","push","defaults","global","animation","duration","legend","myc","document","getElementById","getContext","myChart","type","options","responsive","maintainAspectRatio","events","label","data","labels","reverse","datasets","borderColor","Math","floor","random","clear","myc2","myChart2","backgroundColor","myc3","myChart3","defaultFontSize","toUpperCase","my2","my3","catch","err","console","log","sty","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Chart from 'chart.js';\nimport {Card} from 'react-bootstrap';\n\nexport default function graphs(props){\n\n    let Date_total= new Map()\n    let Date_deaths= new Map()\n    let Date_newdeaths= new Map()\n    let date_key=[]\n    let date_val=[]\n    let death_date=[]\n    let death_val=[]\n    let new_death_date=[]\n    let new_death_val=[]\n    let col = ['orange', 'red', 'black', 'gray', 'yellow', 'blue', 'green','#c45850','#344e4f']\n\n    fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=${props.country}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n        }\n    })\n    .then(response => {return response.json();})\n    .then(resp=>{\n        let metadata = resp.stat_by_country\n        for (let i=0; i<(metadata.length); i++){\n            let d=metadata[i].record_date\n            let total_cases = metadata[i].total_cases\n            let total_death = metadata[i].total_deaths\n            let new_deaths = metadata[i].new_deaths\n            let date = d.split(\" \")\n            if (total_cases !== \"\"){\n               let tot=total_cases.replace(/,/g,'')\n                Date_total.set(date[0],Number(tot))\n            }\n            if (total_death !== \"\"){\n                let dth = total_death.replace(/,/g,'')\n                Date_deaths.set(date[0],Number(dth))\n            }\n            if (new_deaths !== \"\"){\n                let nd = new_deaths.replace(/,/g,'')\n                if (Number(nd) > 30){\n                    Date_newdeaths.set(date[0],Number(nd))\n                }\n            }\n        }\n        date_key = Array.from( Date_total.keys()).slice(0, 30);\n        date_val = Array.from (Date_total.values()).slice(0, 30);\n        death_date = Array.from(Date_deaths.keys()).slice(0, 30);\n        death_val = Array.from(Date_deaths.values()).slice(0, 30);\n        new_death_date = Array.from(Date_newdeaths.keys()).slice(0, 30);\n        new_death_val = Array.from(Date_newdeaths.values()).slice(0, 30);\n       \n\n        /* Native*/\n        if (window.innerWidth<1100){\n            let native_date = [];\n            let native_val = []\n            let native_date_death = [];\n            let native_val_death = []\n            let native_daily_date = [];\n            let native_daily_case = [];\n            for (let i=0; i<date_key.length-2; i=i+2){\n                if(date_key[i] !== undefined){\n                    native_date.push(date_key[i])\n                    native_val.push(date_val[i])\n                }\n                if (death_date[i] !== undefined) {\n                    native_date_death.push((death_date[i]))\n                    native_val_death.push((death_val[i]))\n                }\n                if (new_death_date[i] !== undefined){\n                    native_daily_date.push(new_death_date[i])\n                    native_daily_case.push(new_death_val[i])\n                }\n\n            }\n\n            Chart.defaults.global.animation.duration = 4000;\n            Chart.defaults.global.legend = false;\n            const myc = document.getElementById(\"chart1\").getContext('2d');\n            const myChart = new Chart(myc, {\n                type: 'line',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],label:{legend:true}},\n                data: {\n                    labels: native_date.reverse(),\n                    datasets: [{borderColor: col[Math.floor(Math.random() * col.length)], data:native_val.reverse(),}]\n                    },\n                });\n            myChart.clear()\n\n            const myc2 = document.getElementById(\"chart2\").getContext('2d');\n            const myChart2 = new Chart(myc2, {\n                type: 'bar',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n                data: {\n                    labels: native_date_death.reverse(),\n                    datasets: [{backgroundColor: col[Math.floor(Math.random() * col.length)], data:native_val_death.reverse(),}]\n                },\n            });\n            myChart2.clear()\n\n            const myc3 = document.getElementById(\"chart3\").getContext('2d');\n            const myChart3 = new Chart(myc3,{\n                type: 'line',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n                data: {\n                    labels: native_daily_date.reverse(),\n                    datasets: [{\n                        borderColor: \"gray\",\n                        backgroundColor: col[Math.floor(Math.random() * col.length)],\n                        data:native_daily_case.reverse(),}]\n                },\n            });\n            myChart3.clear()\n\n        }\n        /*  full screen*/\n        else{\n            Chart.defaults.global.defaultFontSize = 11;\n            Chart.defaults.global.animation.duration = 4000;\n            Chart.defaults.global.legend = false;\n\n            const myc = document.getElementById(\"chart1\").getContext('2d');\n            const myChart = new Chart(myc, {\n                type: 'line',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n                data: {\n                    labels: date_key.reverse(),\n                    datasets: [{label: `Case vs Dates - ${props.country.toUpperCase()}`,\n                                borderColor: col[Math.floor(Math.random() * col.length)],\n                                data:date_val.reverse(),\n                    }]\n                },\n            });\n            myChart.clear()\n\n            const my2 = document.getElementById(\"chart2\").getContext('2d');\n            const myChart2 = new Chart(my2, {\n                type: 'bar',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove']},\n                data: {\n                    labels: death_date.reverse(),\n                    datasets: [{label: `Deaths vs Dates in - ${props.country.toUpperCase()}`,\n                                data:death_val.reverse(),\n                                backgroundColor: col[Math.floor(Math.random() * col.length)],\n                    }]\n                },\n            });\n            myChart2.clear()\n\n            const my3 = document.getElementById(\"chart3\").getContext('2d');\n            const myChart3 = new Chart(my3, {\n                type: 'line',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n                data: {\n                    labels: new_death_date.reverse(),\n                    datasets: [{label: `Daily Deaths vs Dates in - ${props.country.toUpperCase()}`,\n                                borderColor: \"gray\",\n                                backgroundColor: col[Math.floor(Math.random() * col.length)],\n                                data:new_death_val.reverse(),\n                    }]\n                },\n            });\n            myChart3.clear()\n        }\n    })\n    .catch(err => {console.log(err);});\n\n    let sty={\n        width:\"52vw\",\n        height:\"63vh\"\n    }\n    if (window.innerWidth<1100){\n        sty.width =\"82vw\";\n        sty.height=\"87vw\";\n    }\n    return(\n        <div>\n            <br/>\n            <Card className=\"effect7\">\n                <Card.Body>\n                    <Card.Header className=\"effect7 head\">Cases vs Dates in {props.country.toUpperCase()}</Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart1\"> </canvas>\n                    </div>\n                </Card.Body>\n                    <Card.Footer className=\"effect7 \"></Card.Footer>\n            </Card>\n            <br/>\n            <br/>\n            <Card className=\"effect7\">\n                <Card.Body>\n                    <Card.Header className=\"effect7 head\">Daily Deaths vs Dates {props.country.toUpperCase()}</Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart3\"></canvas>\n                    </div>\n                </Card.Body>\n                <Card.Footer className=\"effect7\"></Card.Footer>\n            </Card>\n            <br/>\n            <br/>\n            <Card className=\"effect7\">\n                <Card.Body>\n                    <Card.Header className=\"effect7 head\">Total Deaths vs Dates {props.country.toUpperCase()}</Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart2\"></canvas>\n                    </div>\n                </Card.Body>\n                <Card.Footer className=\"effect7\"></Card.Footer>\n            </Card>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}