{"version":3,"sources":["Navbar.js","News.js","Alert.js","FlipCard.js","tab.js","Charts.js","Doughnut.js","App.js","About.js","main.js","serviceWorker.js","index.js"],"names":["NavBar","props","handleChange","event","persist","setState","country","target","value","onSubmit","doCallback","state","bind","disp","margin","font","window","innerWidth","id","style","width","Navbar","collapseOnSelect","expand","bg","className","Brand","src","alt","height","display","borderRadius","fontSize","Toggle","aria-controls","float","Collapse","Nav","to","color","Form","inline","type","onChange","this","placeholder","Button","onClick","variant","React","Component","About","title","bgColor","textColor","date","illustration","AlertDismissible","useState","show","setShow","Alert","padding","onClose","dismissible","Heading","FlipCard","isFlipped","setIsFlipped","tot","handleClick","flipDirection","toUpperCase","Card","Body","Header","rec","dth","stats","total","recovered","align","deaths","Tab","update","fetch","then","response","json","resp","latest_stat_by_country","total_cases","total_recovered","total_deaths","loader","stats_taken","record_date_pure","catch","err","alert","prevProps","prevState","snapshot","s","statistic_taken_at","split","console","log","graphs","Date_total","Map","Date_deaths","Date_newdeaths","date_key","date_val","death_date","death_val","new_death_date","new_death_val","col","metadata","stat_by_country","i","length","d","record_date","total_death","new_deaths","replace","set","Number","nd","Array","from","keys","values","native_date","native_val","native_date_death","native_val_death","native_daily_date","native_daily_case","undefined","push","Chart","defaults","global","animation","duration","legend","myc","document","getElementById","getContext","options","responsive","maintainAspectRatio","events","label","data","labels","reverse","datasets","borderColor","Math","floor","random","clear","myc2","backgroundColor","myc3","defaultFontSize","my2","my3","sty","Footer","Doughnut","countries","v","fetchCountryList","affected_countries","fetchAsync","c","a","b","myc4","dough","error","App","handelChange","val","num","paddingLeft","href","News","Main","path","component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0c67d794.chunk.js","sourcesContent":["import React from 'react';\nimport {Nav, Navbar, Form, Button} from \"react-bootstrap\"\nimport './style.css'\nimport {Link} from \"react-router-dom\";\n\nexport default class NavBar extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state={\n            country:\"\",\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n    handleChange=(event)=>{\n        event.persist()\n        this.setState({country: event.target.value})\n\n    }\n    onSubmit=()=>{\n        const {doCallback} = this.props\n        doCallback(this.state.country)\n\n    }\n    render() {\n        let disp=\"\";\n        let margin=\"\";\n        let padding=\"40px\"\n        let font=\"27px\"\n        if (window.innerWidth<500){\n            disp=\"none\"\n            margin=\"auto\"\n            padding=\"0px\";\n            font= \"20px\"\n        }\n\n        return(\n            <div id=\"fuck\" style={{width:\"100%\"}}>\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" style={{width:\"100%\", margin:margin}} className=\"effect7 \">\n\n                    <Navbar.Brand >\n                        <img src=\"https://github.com/saahil-sutaria/WishlistReact/blob/master/public/COVIID.png?raw=true\"\n                             className=\"ml-5 \"\n                             alt=\"cannot load image\"\n                             width=\"100\" height=\"100\"\n                             style={{display:disp, borderRadius:\"15px\"}}/>\n                        <Navbar.Brand className=\"ml-5 glow\" style={{fontSize:\"40px\"}}>\n                            COVID-19\n\n                        </Navbar.Brand>\n                        <a className=\"blinking\" style={{fontSize:\"22px\"}}>LIVE</a>\n\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" style={{float:\"right\"}}/>\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" >\n                        <Nav className=\"mr-auto m-auto\"   >\n                                <Link to=\"/\">\n                                    <h1  style={{color:\"black\", fontSize:font}} className=\"ml-3 navhead head\">Cases</h1>\n                                </Link>\n                                <Link to=\"/news\">\n                                    <h2  style={{color:\"black\",fontSize:font}} className=\"ml-3 navhead head\">News</h2>\n                                </Link>\n                                <Link to=\"/about\">\n                                    <h1 style={{color:\"black\",fontSize:font}} className=\"ml-3 navhead head\">About</h1>\n                                </Link>\n\n                        </Nav>\n\n                        <Form inline style={{float:\"auto\"}}>\n                            <input type=\"text\" onChange={this.handleChange}   placeholder=\"Usa, Spain...\" className=\"mr-sm-2\" />\n                            <Button onClick={this.onSubmit} variant=\"outline-dark\" className=\"text-dark\">Search</Button>\n                        </Form>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n\n\n}\n","import React from 'react';\nimport Nav from './Navbar'\nimport ComingSoon from \"react-coming-soon\";\n\nimport './style.css'\nfunction About(){\n\n        return (\n            <div>\n                <Nav></Nav>\n                <br/>\n\n                <ComingSoon title=\"Coming Soon\" bgColor=\"#fff\" textColor=\"#212121\" date=\"Tue Jul 28 2020 00:00:00 GMT-0700 (Pacific Daylight Time)\" illustration=\"react\" />\n            </div>\n        );\n\n\n\n}\nexport default About;\n\n\n","import React,{ useState} from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport \"./style.css\"\n\nexport default function AlertDismissible(props) {\n\n    const [show, setShow] = useState(true);\n    if (show===true) {\n        return (\n            <div id=\"alert\">\n                <Alert style={{display:\"inline-block\", margin:\"auto\"  ,padding:\"5px\"}} variant=\"secondary\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>Note!</Alert.Heading>\n                    <p>\n                        Due to timely API updates the graphical representation might not be accurate. <br/>Refresh page if error loading charts.\n                    </p>\n                </Alert>\n            </div>\n        );\n    }\n\n    else{\n\n        return (\n            <div>\n\n            </div>\n\n        )\n    }\n\n\n}\n","import React, {useState} from \"react\";\nimport ReactCardFlip from 'react-card-flip';\nimport {Card,Button} from \"react-bootstrap\";\nimport CountUp from \"react-countup\"\n\nconst FlipCard =(props)=> {\n\n    const [isFlipped,setIsFlipped]=useState(false);\n    let display = \"\";\n    if(props.tot!==\"\"){\n       display=\"none\";\n    }\n\n    const handleClick=()=>{\n        setIsFlipped(!isFlipped);\n\n    };\n\n    return (\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n\n\n            <div className=\"effect7\">\n                <br/>\n                <h2 className=\"head2\">Cases in {props.country.toUpperCase()}</h2>\n                <div id=\"content\">\n                    <Card style={{width:\"18rem\"}} className=\"bg-light text-dark\">\n                        <Card.Body>\n                            <Card.Header><h3> Total </h3></Card.Header>\n\n                                <h1>{props.tot}<div className=\"loader\" style={{display:display, margin:\"auto\"}}/></h1>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n\n                <div id=\"content\">\n                    <Card  style={{width:\"18rem\"}} className=\"bg-success text-light\">\n                        <Card.Body>\n                            <Card.Header><h3>Recovered</h3></Card.Header>\n\n                                <h1>{props.rec}<div className=\"loader\" style={{display:display, margin:\"auto\"}}/></h1>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n\n                <div id=\"content\">\n                    <Card  style={{width:\"18rem\"}} className=\"bg-danger text-light\">\n                        <Card.Body>\n                            <Card.Header><h3>Deaths</h3></Card.Header>\n\n                                <h1>{props.dth} <div className=\"loader\" style={{display:display, margin:\"auto\"}}/></h1>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div>\n                    <Button style={{width:\"70%\"}} variant=\"outline-danger\"  onClick={handleClick}>Click to flip</Button>\n                </div>\n                <br/>\n                <p style={{fontSize:\"8px\"}}>Statistics taken at :- {props.stats}</p>\n            </div>\n\n\n            <div className=\"effect7\" >\n                <br/>\n                <h2 className=\"head2\">Global Cases</h2>\n                <div id=\"content\">\n                    <Card style={{width:\"18rem\"}} className=\"bg-light text-dark\">\n                        <Card.Body>\n                            <Card.Header><h3> Total </h3></Card.Header>\n\n                                <h1>{props.total}</h1>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n\n                <div id=\"content\">\n                    <Card  style={{width:\"18rem\"}} className=\"bg-success text-light\">\n                        <Card.Body>\n                            <Card.Header><h3>Recovered</h3></Card.Header>\n\n                                <h1>{props.recovered}</h1>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n\n                <div id=\"content\" style={{align:\"auto\"}}>\n                    <Card  style={{width:\"18rem\"}} className=\"bg-danger text-light\">\n                        <Card.Body>\n                            <Card.Header><h3>Deaths</h3></Card.Header>\n\n                                <h1>{props.deaths}</h1>\n\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div>\n                    <Button style={{width:\"70%\"}} variant=\"outline-success\" onClick={handleClick}>Click to flip</Button>\n                </div>\n                <br/>\n            </div>\n\n\n\n\n\n\n        </ReactCardFlip>\n    )\n\n}\nexport default FlipCard;\n","import React from 'react';\nimport \"./style.css\"\n\nimport FlipCard from \"./FlipCard\";\n\nexport default  class Tab extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            total:0,\n            recovered:0,\n            deaths:0,\n            country:\"USA\",\n            tot:\"\",\n            rec:\"\",\n            dth:\"\",\n            loader:\"\",\n            stats_taken:\"\",\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps!==this.props){\n            this.setState({country: this.props.country})\n            this.update()\n        }\n\n    }\n    update=()=>{\n        fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/latest_stat_by_country.php?country=${this.props.country}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n            }\n        })\n            .then(response => {return response.json();\n            }).then(resp=>{\n            this.setState({tot:resp.latest_stat_by_country[0].total_cases,\n                rec: resp.latest_stat_by_country[0].total_recovered,\n                dth: resp.latest_stat_by_country[0].total_deaths,\n                loader: \"none\",\n                stats_taken:resp.latest_stat_by_country[0].record_date_pure})\n\n        })\n            .catch(err => {\n                window.alert(\"Check for input\")\n            });\n\n    }\n    componentDidMount() {\n\n        fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n            }\n        })\n            .then(response => {return (response.json());}).then(resp => {\n\n            let stats =resp.statistic_taken_at;\n            let s= stats.split(\" \")\n            this.setState({total:resp.total_cases, recovered: resp.total_recovered, deaths: resp.total_deaths, stats_taken:s[0]})\n        }).catch(err => {console.log(err);});\n\n        fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/latest_stat_by_country.php?country=${this.props.country}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n            }\n        })\n            .then(response => {return response.json();\n            }).then(resp=>{\n            console.log(resp)\n            this.setState({tot:resp.latest_stat_by_country[0].total_cases,\n                rec: resp.latest_stat_by_country[0].total_recovered,\n                dth: resp.latest_stat_by_country[0].total_deaths})\n             })\n            .catch(err => {window.alert(\"Check for input\")});\n\n    }\n\n    render() {\n\n\n        return(\n\n                    <div>\n\n                    <FlipCard\n                        country={this.props.country}\n                        total={this.state.total}\n                        recovered={this.state.recovered}\n                        deaths={this.state.deaths}\n                        tot={this.state.tot}\n                        rec={this.state.rec}\n                        dth ={this.state.dth}\n                        stats={this.state.stats_taken}\n                        />\n\n                    </div>\n\n\n\n\n\n\n        )\n\n    }\n\n\n\n}\n","import React from \"react\";\nimport Chart from 'chart.js';\nimport {Card} from 'react-bootstrap';\n\n\n\nexport default function graphs(props){\n\n    let Date_total= new Map()\n    let Date_deaths= new Map()\n    let Date_newdeaths= new Map()\n    let date_key=[]\n    let date_val=[]\n    let death_date=[]\n    let death_val=[]\n    let new_death_date=[]\n    let new_death_val=[]\n\n    let col = ['orange', 'red', 'black', 'gray', 'yellow', 'blue', 'green','#c45850','#344e4f']\n\n\n\n\n    fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=${props.country}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n        }\n    })\n        .then(response => {\n            return response.json();\n        }).then(resp=>{\n\n        let metadata = resp.stat_by_country\n        for (let i=0; i<(metadata.length); i++){\n\n            let d=metadata[i].record_date\n            let total_cases = metadata[i].total_cases\n            let total_death = metadata[i].total_deaths\n            let new_deaths = metadata[i].new_deaths\n\n            let date = d.split(\" \")\n            if (total_cases!==\"\"){\n               let tot=total_cases.replace(/,/g,'')\n                Date_total.set(date[0],Number(tot))\n            }\n            if (total_death!==\"\"){\n                let dth = total_death.replace(/,/g,'')\n                Date_deaths.set(date[0],Number(dth))\n            }\n            if (new_deaths!==\"\"){\n                let nd = new_deaths.replace(/,/g,'')\n                if (Number(nd)>30){\n                    Date_newdeaths.set(date[0],Number(nd))\n                }\n            }\n        }\n        date_key = Array.from( Date_total.keys() );\n        date_val = Array.from (Date_total.values());\n        death_date=Array.from(Date_deaths.keys());\n        death_val =Array.from(Date_deaths.values())\n        new_death_date = Array.from(Date_newdeaths.keys())\n        new_death_val = Array.from(Date_newdeaths.values())\n\n        /* Native*/\n        if (window.innerWidth<1100){\n            let native_date=[];\n            let native_val=[]\n            let native_date_death=[];\n            let native_val_death=[]\n            let native_daily_date=[];\n            let native_daily_case =[];\n            for (let i=0; i<date_key.length-2; i=i+2){\n\n                if(date_key[i]!==undefined){\n                    native_date.push(date_key[i])\n                    native_val.push(date_val[i])\n                }\n                if (death_date[i]!==undefined) {\n                    native_date_death.push((death_date[i]))\n                    native_val_death.push((death_val[i]))\n                }\n                if (new_death_date[i]!==undefined){\n                    native_daily_date.push(new_death_date[i])\n                    native_daily_case.push(new_death_val[i])\n                }\n\n            }\n\n            Chart.defaults.global.animation.duration=4000;\n            Chart.defaults.global.legend=false;\n            const myc = document.getElementById(\"chart1\").getContext('2d');\n            const myChart = new Chart(myc, {\n                type: 'line',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],label:{legend:true}},\n                data: {\n                    labels: native_date.reverse(),\n                    datasets: [{borderColor: col[Math.floor(Math.random() * col.length)], data:native_val.reverse(),}]\n                    },\n                });\n            myChart.clear()\n\n            const myc2 = document.getElementById(\"chart2\").getContext('2d');\n            const myChart2 = new Chart(myc2, {\n                type: 'bar',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n                data: {\n                    labels: native_date_death.reverse(),\n                    datasets: [{backgroundColor: \"gray\", data:native_val_death.reverse(),}]\n                },\n            });\n            myChart2.clear()\n            const myc3 = document.getElementById(\"chart3\").getContext('2d');\n            const myChart3 = new Chart(myc3,{\n                type: 'line',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n                data: {\n                    labels: native_daily_date.reverse(),\n                    datasets: [{\n                        borderColor: \"gray\",\n                        backgroundColor: \"yellow\",\n                        data:native_daily_case.reverse(),}]\n                },\n            });\n            myChart3.clear()\n\n        }\n        /*  full screen*/\n        else{\n            Chart.defaults.global.defaultFontSize = 11;\n            Chart.defaults.global.animation.duration=4000;\n            Chart.defaults.global.legend=false;\n\n            const myc = document.getElementById(\"chart1\").getContext('2d');\n            const myChart = new Chart(myc, {\n                type: 'line',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n\n                data: {\n                    labels: date_key.reverse(),\n                    datasets: [{label: `Case vs Dates in ${props.country.toUpperCase()}`,\n                                borderColor: col[Math.floor(Math.random() * col.length)],\n                                data:date_val.reverse(),\n                    }]\n                },\n            });\n\n            myChart.clear()\n\n            const my2 = document.getElementById(\"chart2\").getContext('2d');\n            const myChart2 = new Chart(my2, {\n                type: 'bar',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove']},\n\n                data: {\n                    labels: death_date.reverse(),\n                    datasets: [{label: `Deaths vs Dates in ${props.country.toUpperCase()}`,\n                                data:death_val.reverse(),\n                                backgroundColor: \"gray\",\n                    }]\n                },\n            });\n            myChart2.clear()\n            const my3 = document.getElementById(\"chart3\").getContext('2d');\n            const myChart3 = new Chart(my3, {\n                type: 'line',\n                options:{responsive: true, maintainAspectRatio: true, events: ['mousemove'],},\n\n                data: {\n                    labels: new_death_date.reverse(),\n\n                    datasets: [{label: `Daily Deaths vs Dates in ${props.country.toUpperCase()}`,\n                                borderColor: \"gray\",\n                                backgroundColor: \"yellow\",\n                                data:new_death_val.reverse(),\n                    }]\n                },\n            });\n            myChart3.clear()\n\n        }\n\n\n    }).catch(err => {console.log(err);});\n\n    let sty={\n        width:\"52vw\",\n        height:\"63vh\"\n    }\n\n    if (window.innerWidth<1100){\n        sty.width =\"82vw\";\n        sty.height=\"87vw\";\n\n    }\n\n\n    return(\n        <div>\n            <br/>\n            <Card className=\"effect7\">\n                <Card.Body>\n                    <Card.Header className=\"effect7 head\">Cases vs Dates in {props.country.toUpperCase()}</Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart1\"> </canvas>\n                    </div>\n                </Card.Body>\n                    <Card.Footer className=\"effect7 \"></Card.Footer>\n            </Card>\n            <br/>\n            <br/>\n\n            <Card className=\"effect7\">\n                <Card.Body>\n                    <Card.Header className=\"effect7 head\">Daily Deaths vs Dates {props.country.toUpperCase()}</Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart3\"></canvas>\n                    </div>\n                </Card.Body>\n                <Card.Footer className=\"effect7\"></Card.Footer>\n            </Card>\n\n            <br/>\n            <br/>\n            <Card className=\"effect7\">\n                <Card.Body>\n                    <Card.Header className=\"effect7 head\">Total Deaths vs Dates {props.country.toUpperCase()}</Card.Header>\n                    <br/>\n                    <div id=\"chr\">\n                        <canvas style={sty} id=\"chart2\"></canvas>\n                    </div>\n                </Card.Body>\n                <Card.Footer className=\"effect7\"></Card.Footer>\n            </Card>\n\n\n\n\n        </div>\n    )\n\n\n\n}\n","import React from 'react';\nimport './App.css';\nimport Chart from 'chart.js'\nimport {Card} from \"react-bootstrap\";\n\n\nclass Doughnut extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.countries=[];\n        this.v = new Map()\n        this.width=\"380px\"\n        this.height=\"380px\"\n        if(window.innerWidth<1000){\n            this.width=\"300px\"\n            this.height=\"300px\"\n        }\n\n\n\n    }\n\n    componentDidMount() {\n        this.fetchCountryList()\n    }\n\n    fetchCountryList(){\n        console.log(\"Inside fetch\")\n        fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/affected.php\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n            }\n        })\n            .then(response => {return (response.json());})\n            .then(resp=>{\n\n                for (let i=0; i<5; i++) {\n                    this.countries.push(resp.affected_countries[i])\n                }\n            })\n            .then(()=>{this.fetchAsync()})\n            .catch(err => {console.log(err);});\n    }\n\n\n\n\n    fetchAsync(){\n\n        for (let i=0; i< this.countries.length; i++){\n            fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/latest_stat_by_country.php?country=${this.countries[i]}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"ebf8d75e2dmsh37e9046fd3028eep14281ajsn7d548a9e63d1\"\n                }\n            }).then(response=> {return response.json()})\n                .then(resp=>{\n\n\n                    let c = resp.latest_stat_by_country[0].total_cases.replace(/,/g,'')\n                    this.v.set(resp.country,Number(c) )\n                }).then(()=>{let a= Array.from(this.v.keys())\n                let b=Array.from(this.v.values())\n                console.log(a)\n                console.log(b)\n                Chart.defaults.global.animation.duration=10000;\n                Chart.defaults.global.defaultFontSize = 7;\n                if (document.getElementById(\"dd\")!=null){\n\n                    const myc4 = document.getElementById(\"dd\").getContext('2d');\n                    const dough =new Chart(myc4,{\n                        type: 'doughnut',\n                        options:{responsive: true, maintainAspectRatio: false, events: ['mousemove'],\n                            legend:{\n                                display:true,\n                            }},\n                        data: {\n                            labels: a.reverse(),\n                            datasets: [{\n                                borderColor: \"white\",\n                                backgroundColor: [\n                                    'rgba(79,64,36,0.94)',\n                                    'rgb(128,104,58)',\n                                    'rgba(190,154,87,0.91)',\n                                    'rgba(244,197,111,0.9)',\n                                    'rgba(180,180,11,0.93)',\n                                ],\n\n                                data:b.reverse()}]\n                        },\n                    });\n\n                    console.log(dough)\n                }\n\n            }).catch(error=>console.log(error))\n\n\n\n        }\n\n\n\n    }\n\n\n\n    render() {\n        return (\n            <div>\n\n                <Card className=\"effect7\">\n                    <Card.Header className=\"head\"> Top 5 countries</Card.Header>\n                    <Card.Body>\n                        <canvas style={{width:this.width,height:this.height}} id=\"dd\" >Ω</canvas>\n                    </Card.Body>\n                    <Card.Footer></Card.Footer>\n                </Card>\n            </div>\n        );\n    }\n\n\n\n\n}\n\nexport default Doughnut;\n","import React,{useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from './Navbar';\nimport Alt from  \"./Alert\";\nimport Total from './tab';\nimport ParticlesBg from 'particles-bg'\nimport './style.css'\nimport Graphs from \"./Charts\";\nimport Doughnut from \"./Doughnut\";\nimport {Card} from \"react-bootstrap\";\n\n\n\n\nexport default class App extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state={\n            country:\"Usa\",\n        };\n        this.handelChange=this.handelChange.bind(this)\n    }\n\n\n\n    handelChange(val){\n        this.setState({country: val})\n    }\n\n    render() {\n        let margin=\"\"\n        let display=\"flex\";\n        let padding =\"90px\"\n        if (window.innerWidth<1100){\n            margin=\"auto\";\n            display=\"grid\"\n            padding=\"0px\"\n        }\n        const{country} = this.state\n        return (\n\n            <div className=\"App\" >\n                <div id=\"part\">\n                    <ParticlesBg color={[\"#000000\"]} type=\"cobweb\" bg={true} num={[55]} v={[1, 2]} />\n                </div>\n                <Nav doCallback={this.handelChange}/>\n                <br/>\n                <Alt country={country}/>\n                <div id=\"main\" style={{display:display, paddingLeft:padding, margin:margin}}>\n                    <div id=\"first\" style={{margin:margin}}>\n                        <Total  country={country} />\n                        <br/>\n                        <br/>\n                        <div id=\"dou\">\n                            <Doughnut country={country}/>\n                        </div>\n\n                    </div>\n                    <div id=\"second\" style={{display:\"flex\", margin:margin}}>\n                        <Graphs country={this.state.country}/>\n                    </div>\n                </div>\n\n                <br/>\n                <br/>\n               <Card.Footer className=\"effect7 bg-dark text-white\">\n                   - by Sahil Sutaria\n                   &nbsp;\n                        <a href=\"https://www.linkedin.com/in/sahilsutaria/\">\n                            <img width=\"28px\"  height=\"28px\"   src=\"https://github.com/saahil-sutaria/WishlistReact/blob/master/public/git.png?raw=true\"/>  </a>\n                   &nbsp;\n                   &nbsp;\n                   <a href=\"https://github.com/saahil-sutaria/CoronaVirusTrackerReact/\">\n                    <img width=\"25px\"  height=\"25px\"  src=\"https://github.com/saahil-sutaria/WishlistReact/blob/master/public/linkedin.png?raw=true\"/>\n                   </a>\n               </Card.Footer>\n            </div>\n\n        );\n    }\n\n\n}\n\n\n","import React from 'react';\nimport ComingSoon from \"react-coming-soon\";\nimport Nav from \"./Navbar\";\nimport {Card} from \"react-bootstrap\";\n\nfunction News(){\n\n    return (\n        <div>\n\n\n        <div >\n            <Nav></Nav>\n            <br/>\n            <ComingSoon title=\"Coming Soon\" bgColor=\"#fff\" textColor=\"#212121\" date=\"Tue Jul 25 2020 00:00:00 GMT-0700 (Pacific Daylight Time)\" illustration=\"git\" />\n\n        </div>\n\n\n        </div>\n    );\n\n\n\n}\nexport default News;\n\n\n","import React,{useState} from 'react';\nimport './App.css';\nimport News from './News'\nimport './style.css'\nimport App from './App'\nimport About from \"./About\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\n\n export default function Main (){\n\n\n        return (\n            <Router>\n                <div>\n                <Switch>\n                    <Route path=\"/news\" component={News}/>\n                    <Route path=\"/about\" component={About}/>\n                    <Route  path=\"/\" component={App}/>\n\n                </Switch>\n                </div>\n            </Router>\n\n\n        );\n\n\n\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <Main/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}